{"version":3,"sources":["components/Filter.js","components/Weather.js","components/SingleCountry.js","components/Countries.js","App.js","index.js"],"names":["Filter","showAll","handleFilter","value","onChange","Weather","country","useState","weather","setWeather","isWeather","setIsWeather","useEffect","axios","get","process","capital","then","response","console","log","data","current","success","undefined","temperature","src","weather_icons","wind_speed","wind_dir","SingleCountry","name","population","languages","map","lang","iso639_1","className","flag","numericCode","Countries","countries","selectedCountry","setSelectedCountry","length","shownCountries","onClick","App","setCountries","targetCountry","setTargetCountry","countriesToShow","filter","toLowerCase","includes","event","target","ReactDOM","render","document","getElementById"],"mappings":"qLAWeA,EATA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACxB,OACE,gCACE,+CACA,uBAAOC,MAAOF,EAASG,SAAUF,Q,gBCoCxBG,EAvCC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACEC,mBAAS,IADX,mBACrBC,EADqB,KACZC,EADY,OAEMF,oBAAS,GAFf,mBAErBG,EAFqB,KAEVC,EAFU,KAsB7B,OAfAC,qBAAU,WACRC,IACCC,IADD,UAHU,8BAGV,+BAJcC,mCAId,kBACmDT,EAAQU,UAC1DC,MAAK,SAAAC,GACJC,QAAQC,IAAI,UAAWF,EAASG,MAChCZ,EAAWS,EAASG,KAAKC,SACzBH,QAAQC,IAAIF,EAASG,KAAKE,cAEGC,IAA1BN,EAASG,KAAKE,SACfZ,GAAa,QAGhB,CAACL,EAAQU,UAIV,8BACIN,EACA,gCACE,6CAAgBJ,EAAQU,WACxB,8BAAG,mDAA+BR,EAAQiB,eAC1C,qBAAKC,IAAKlB,EAAQmB,gBAClB,8BAAG,4CAAwBnB,EAAQoB,WAAnC,mBAA+DpB,EAAQqB,eAGzE,6CCfOC,EAjBO,SAAC,GAAe,IAAdxB,EAAa,EAAbA,QACtB,OACE,gCACE,6BAAKA,EAAQyB,OACb,yCAAYzB,EAAQU,WACpB,4CAAeV,EAAQ0B,cACvB,2CACA,6BACG1B,EAAQ2B,UAAUC,KAAI,SAAAC,GAAI,OACzB,6BAAyBA,EAAKJ,MAArBI,EAAKC,eAElB,qBAAKC,UAAU,OAAOX,IAAKpB,EAAQgC,OACnC,cAAC,EAAD,CAAShC,QAASA,MAVVA,EAAQiC,cC2BPC,EA5BG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAwB,KAAbjC,QAEkBD,sBAFL,mBAElCmC,EAFkC,KAEjBC,EAFiB,KAI1C/B,qBAAU,WACkB,IAArB6B,EAAUG,QACXD,EAAmBF,EAAU,MAE9B,CAACA,IAEN,IAAMI,EAAiBJ,EAAUP,KAAI,SAAA5B,GAAO,OAC1C,gCACE,+BAAOA,EAAQyB,OACf,wBAAQe,QAAS,kBAAMH,EAAmBrC,IAA1C,sBAFQA,EAAQiC,gBAOpB,OADApB,QAAQC,IAAIsB,GAEV,gCAEGD,EAAUG,OAAS,GAAKC,EAExBH,GAAmB,cAAC,EAAD,CAAiDpC,QAASoC,GAAtCA,EAAgBH,iBCU/CQ,EAhCH,WAAO,IAAD,EACmBxC,mBAAS,IAD5B,mBACRkC,EADQ,KACGO,EADH,OAE4BzC,mBAAS,IAFrC,mBAER0C,EAFQ,KAEOC,EAFP,KAKhBtC,qBAAU,WACRC,IACGC,IAAI,wCACJG,MAAK,SAAAC,GACJ8B,EAAa9B,EAASG,WAEzB,IAGH,IAIM8B,EAA0C,GAAxBF,EAAcL,OACpCH,EAAUW,QAAO,SAAA9C,GAAO,OAAIA,EAAQyB,KAAKsB,cAAcC,SAASL,EAAcI,kBAAkBZ,EAElG,OACE,sBAAKJ,UAAU,YAAf,UACE,2DACA,cAAC,EAAD,CAAQpC,QAASgD,EAAe/C,aAVf,SAACqD,GACpBL,EAAiBK,EAAMC,OAAOrD,UAU3BgD,EAAgBP,OAAS,GAAK,2CAC7B,cAAC,EAAD,CAAWH,UAAWU,QC1B9BM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.61285951.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Filter = ({showAll, handleFilter}) => {\r\n  return (\r\n    <div>\r\n      <p>find countries</p>\r\n      <input value={showAll} onChange={handleFilter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Weather = ({country}) => {\r\n  const [ weather, setWeather] = useState([]) \r\n  const [ isWeather, setIsWeather] = useState(false)\r\n\r\n  const api_key = process.env.REACT_APP_API_KEY\r\n  const url = 'http://api.weatherstack.com'\r\n\r\n  useEffect(() => {\r\n    axios\r\n    .get(`${url}/current?access_key=${api_key}&query=${country.capital}`)\r\n    .then(response => {\r\n      console.log('weather', response.data)\r\n      setWeather(response.data.current)\r\n      console.log(response.data.success)\r\n      // prevent crashing by defining isWeather state true if returned data success=false is not defined yet\r\n      if(response.data.success === undefined){\r\n        setIsWeather(true)\r\n      }\r\n    })\r\n  }, [country.capital])\r\n\r\n  // console.log(isWeather)\r\n  return (\r\n    <div>\r\n      { isWeather ? (\r\n        <div>\r\n          <h3>weather in {country.capital}</h3>\r\n          <p><strong>temperature: </strong>{weather.temperature}</p>\r\n          <img src={weather.weather_icons}></img>\r\n          <p><strong>wind: </strong>{weather.wind_speed} mph, direction {weather.wind_dir}</p>\r\n        </div>\r\n      ) : (\r\n        <div>no data</div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather\r\n","import React, { useState } from 'react'\r\nimport Weather from './Weather'\r\n\r\nconst SingleCountry = ({country}) => {\r\n  return (\r\n    <div key={country.numericCode}>\r\n      <h2>{country.name}</h2>\r\n      <p>capital {country.capital}</p>\r\n      <p>population {country.population}</p>\r\n      <h3>languages</h3>\r\n      <ul>\r\n        {country.languages.map(lang =>\r\n          <li key={lang.iso639_1}>{lang.name}</li>)}\r\n      </ul>\r\n      <img className='flag' src={country.flag}></img>\r\n      <Weather country={country} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SingleCountry","import React, { useState, useEffect } from 'react'\r\nimport SingleCountry from './SingleCountry'\r\n\r\n\r\nconst Countries = ({countries, weather}) => {\r\n  // define state for selected (single) country\r\n  const [ selectedCountry, setSelectedCountry] = useState() \r\n\r\n  useEffect(() => {\r\n      if(countries.length === 1){ // if the list already contains single country\r\n        setSelectedCountry(countries[0])\r\n      }\r\n    }, [countries])\r\n\r\n  const shownCountries = countries.map(country => (\r\n    <div key={country.numericCode}>\r\n      <span>{country.name}</span>\r\n      <button onClick={() => setSelectedCountry(country)} > Show </button>\r\n    </div>\r\n  ))\r\n\r\n  console.log(selectedCountry)\r\n  return ( \r\n    <div>\r\n      {/* if more than one countries in the list, then show list of countries */}\r\n      {countries.length > 1 && shownCountries}\r\n      {/* if selectedCountry is not undefined, show that single country */}\r\n      {selectedCountry && <SingleCountry key={selectedCountry.numericCode} country={selectedCountry} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countries","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Countries from './components/Countries'\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n  const [ countries, setCountries] = useState([]) \r\n  const [ targetCountry, setTargetCountry ] = useState('') // for filtering displayed elements\r\n  \r\n  // effect-hooks\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://restcountries.eu/rest/v2/all')\r\n      .then(response => {\r\n        setCountries(response.data)\r\n      })\r\n  }, [])\r\n\r\n  // on input, get its value for filtering\r\n  const handleFilter = (event) => {\r\n    setTargetCountry(event.target.value)\r\n  }\r\n  // condition for filtering out countries based on search input\r\n  const countriesToShow = targetCountry.length != 0 ? \r\n    countries.filter(country => country.name.toLowerCase().includes(targetCountry.toLowerCase())) : countries\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Search for a country name</h2>\r\n      <Filter showAll={targetCountry} handleFilter={handleFilter}/>\r\n      {countriesToShow.length > 10 ? 'Too much matches, specify another filter' \r\n      : <Countries countries={countriesToShow} /> }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}